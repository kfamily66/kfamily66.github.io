{"version":3,"sources":["constants/colors.js","assets/images/bespoke1.jpg","assets/images/bespoke2.jpg","assets/images/bespoke3.jpg","assets/images/bespoke4.jpg","assets/images/title1.jpg","assets/images/title2.jpg","assets/images/title3.jpg","assets/images/title4.jpg","assets/images/title5.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../src/observers.ts","../../src/InView.tsx","assets/images/index.js","screens/Projects/styled.js","screens/Projects/Projects.js","../../src/useInView.tsx"],"names":["black","white","gray","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","ObserverMap","RootIds","rootId","optionsToId","options","key","root","observe","element","callback","id","instance","elements","observer","IntersectionObserver","entries","inView","entry","thresholds","createObserver","callbacks","isPlainChildren","props","InView","node","_unobserveCb","handleNode","handleChange","componentDidUpdate","prevProps","this","componentWillUnmount","observeNode","threshold","rootMargin","trackVisibility","delay","unobserve","render","children","ref","as","tag","triggerOnce","initialInView","orange","title1","bespoke2","luxury","title2","bespoke3","classic","title3","bespoke4","bespoke","title4","title5","bespoke1","Wrapper","styled","div","ListWrapper","ListItem","active","colors","Cards","CardWrapper","BackgroundImage","img","ForegroundImage","items","title","images","alias","List","currentIndex","router","useRouter","map","index","onClick","Card","item","setActive","useInView","skip","React","state","setState","setRef","useEffect","result","console","log","src","Main","useState","setCurrentIndex"],"mappings":"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","file":"static/js/6.233363f8.chunk.js","sourcesContent":["export default {\n    black: '#000',\n    white: '#FFF',\n    gray: '#4c4c4c',\n};\n","export default __webpack_public_path__ + \"static/media/bespoke1.c638383a.jpg\";","export default __webpack_public_path__ + \"static/media/bespoke2.f101b97a.jpg\";","export default __webpack_public_path__ + \"static/media/bespoke3.1e8602f7.jpg\";","export default __webpack_public_path__ + \"static/media/bespoke4.14357389.jpg\";","export default __webpack_public_path__ + \"static/media/title1.7bdccb37.jpg\";","export default __webpack_public_path__ + \"static/media/title2.4de0a774.jpg\";","export default __webpack_public_path__ + \"static/media/title3.97bfe88c.jpg\";","export default __webpack_public_path__ + \"static/media/title4.3a4ac2c5.jpg\";","export default __webpack_public_path__ + \"static/media/title5.3f40de1f.jpg\";","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { ObserverInstanceCallback } from './index';\n\nconst ObserverMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: Map<Element, string> = new Map();\n\nlet rootId = 0;\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root?: Element | null) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n) {\n  if (!element) return () => {};\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n * Monitors scroll, and triggers the children function with updated props\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const { threshold, root, rootMargin, trackVisibility, delay } = this.props;\n\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay,\n    });\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      tag,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || tag || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import bespoke1 from './bespoke1.jpg';\nimport bespoke2 from './bespoke2.jpg';\nimport bespoke3 from './bespoke3.jpg';\nimport bespoke4 from './bespoke4.jpg';\nimport title1 from './title1.jpg';\nimport title2 from './title2.jpg';\nimport title3 from './title3.jpg';\nimport title4 from './title4.jpg';\nimport title5 from './title5.jpg';\n\nconst orange = [title1, bespoke2];\nconst luxury = [title2, bespoke3];\nconst classic = [title3, bespoke4];\nconst bespoke = [title4, bespoke2, bespoke3, bespoke4];\nconst gray = [title5, bespoke1];\n\nexport {orange, luxury, classic, bespoke, gray};\n","import styled from 'styled-components';\n\nimport {colors} from '../../constants';\n\nexport const Wrapper = styled.div`\n    flex: 1;\n\n    padding: 32px;\n\n    display: flex;\n`;\n\nexport const ListWrapper = styled.div`\n    width: 30%;\n`;\n\nexport const ListItem = styled.div`\n    color: ${props => (props.active ? 'red' : colors.gray)};\n    margin: 8px 0;\n`;\n\nexport const Cards = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const CardWrapper = styled.div`\n    position: relative;\n\n    margin: 100px;\n    height: 600px;\n`;\n\nexport const BackgroundImage = styled.img`\n    height: 400px;\n    position: absolute;\n    top: 0;\n`;\n\nexport const ForegroundImage = styled(BackgroundImage)`\n    height: 500px;\n    z-index: 2;\n    transform: translate3d(100px, -50px, 10px);\n    box-shadow: -7px 6px 15px -1px rgba(0, 0, 0, 0.35);\n`;\n","import React, {useState} from 'react';\nimport propTypes from 'prop-types';\n\nimport {useRouter} from 'found';\nimport {useInView} from 'react-intersection-observer';\n\nimport {orange, luxury, classic, gray, bespoke} from '../../assets/images';\n\nimport {\n    Wrapper,\n    ListWrapper,\n    ListItem,\n    ForegroundImage,\n    BackgroundImage,\n    Cards,\n    CardWrapper,\n} from './styled';\n\nconst items = [\n    {title: 'house & orange accent', images: orange, alias: 'orange'},\n    {title: 'luxury apartment', images: luxury, alias: 'stone'},\n    {title: '50 metres of gray', images: gray, alias: 'gray'},\n    {title: 'save classic', images: classic, alias: 'classic'},\n    {title: 'bespoke furniture', images: bespoke, alias: 'bespoke'},\n];\n\nconst List = props => {\n    const {items, currentIndex} = props;\n    const {router} = useRouter();\n\n    return (\n        <ListWrapper>\n            {items.map(({title, alias}, index) => (\n                <ListItem\n                    key={title}\n                    active={index === currentIndex}\n                    onClick={() => router.push(`/projects/${alias}`)}\n                >\n                    {title}\n                </ListItem>\n            ))}\n        </ListWrapper>\n    );\n};\n\nList.propTypes = {\n    items: propTypes.array,\n    currentIndex: propTypes.number,\n};\n\nconst Card = props => {\n    const {item, setActive} = props;\n    const {ref, inView} = useInView({threshold: 1});\n\n    if (inView) {\n        setActive();\n        console.log('setActive:', item.title);\n    }\n\n    return (\n        <CardWrapper ref={ref}>\n            <ForegroundImage src={item.images[1]} />\n            <BackgroundImage src={item.images[0]} />\n        </CardWrapper>\n    );\n};\n\nCard.propTypes = {\n    item: propTypes.object,\n    setActive: propTypes.func,\n};\n\nexport default function Main(props) {\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n    return (\n        <Wrapper>\n            <List\n                items={items}\n                currentIndex={currentIndex}\n                setCurrentIndex={setCurrentIndex}\n            />\n            <Cards>\n                {items.map((item, index) => (\n                    <Card\n                        key={item.title}\n                        item={item}\n                        setActive={() => setCurrentIndex(index)}\n                    />\n                ))}\n            </Cards>\n        </Wrapper>\n    );\n}\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observers';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n\n  const setRef = React.useCallback(\n    (node) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"sourceRoot":""}